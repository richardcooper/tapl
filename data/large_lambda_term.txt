((if true then (λq:(((Bool → Bool) → (Bool → Bool)) → Bool). (if false then ((λm:(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))). ((λs:((Bool → (Bool → Bool)) → ((Bool → Bool) → ((Bool → Bool) → Bool))). (if (if true then ((λv:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (Bool → ((Bool → Bool) → (Bool → Bool)))). true) (((λh:(((Bool → Bool) → (Bool → (Bool → Bool))) → (((Bool → Bool) → Bool) → ((Bool → Bool) → (Bool → Bool)))). (λc:(((Bool → Bool) → Bool) → (Bool → Bool)). (λc':(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λf:Bool. (λa:(Bool → Bool). a))))) (λp:((Bool → Bool) → (Bool → (Bool → Bool))). (λr:((Bool → Bool) → Bool). (λx:(Bool → Bool). (λx':Bool. x'))))) (λh:((Bool → Bool) → Bool). ((if false then (λe:(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))). ((λa:(Bool → (Bool → Bool)). (λa':Bool. a')) (if false then (λi:Bool. (λg:Bool. g)) else (if true then (λt:Bool. (λu:Bool. false)) else (λa:Bool. (if a then (λd:Bool. a) else ((if false then (if a then (λw:(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). (λp:Bool. p)) else (λm':(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). ((λe':((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → ((Bool → Bool) → (Bool → Bool))). (λv:Bool. v)) (λl:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λy:(Bool → Bool). y))))) else (λw:(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). (λl:Bool. l))) (λy:((Bool → Bool) → Bool). (λk:Bool. (λq':Bool. a)))))))))) else ((λu:(Bool → (((Bool → Bool) → (Bool → Bool)) → Bool)). (λs':(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))). (λe:Bool. e))) (λf:Bool. q))) m)))) else false) then (λy:Bool. y) else ((λd:((((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))) → (Bool → (Bool → (Bool → Bool)))). (λj:Bool. j)) (if false then (λz:(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))). (if false then ((λn:((((Bool → Bool) → Bool) → Bool) → ((Bool → Bool) → Bool)). (λd:Bool. (λl:Bool. (if d then (if l then (if d then (λy:Bool. l) else ((λx:(((Bool → (Bool → Bool)) → (Bool → (Bool → Bool))) → ((Bool → (Bool → Bool)) → (Bool → (Bool → Bool)))). (if d then (if d then (λq':Bool. true) else (λc:Bool. d)) else (λn':Bool. l))) (λw:((Bool → (Bool → Bool)) → (Bool → (Bool → Bool))). w))) else (λm':Bool. false)) else (λs':Bool. d))))) (if false then (λe:(((Bool → Bool) → Bool) → Bool). (((λp:(((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))) → ((Bool → Bool) → (Bool → (Bool → Bool)))). ((if ((λy:((((Bool → Bool) → (Bool → (Bool → Bool))) → ((Bool → Bool) → Bool)) → (Bool → Bool)). true) (λr:(((Bool → Bool) → (Bool → (Bool → Bool))) → ((Bool → Bool) → Bool)). (λe':Bool. e'))) then ((λb:(((Bool → Bool) → (Bool → Bool)) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (λb':(((Bool → Bool) → Bool) → (Bool → Bool)). (λc:((Bool → Bool) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λo:(Bool → Bool). (if false then true else true))))) (if (if true then true else true) then (λh:((Bool → Bool) → (Bool → Bool)). (λd:((Bool → Bool) → (Bool → Bool)). (λf:Bool. f))) else (if true then (if true then (λd:((Bool → Bool) → (Bool → Bool)). ((λd':((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))). (λy:((Bool → Bool) → (Bool → Bool)). (if false then (λw:Bool. w) else (λu:Bool. u)))) (λm':(Bool → (Bool → Bool)). d))) else (λf:((Bool → Bool) → (Bool → Bool)). (λr:((Bool → Bool) → (Bool → Bool)). (λl:Bool. l)))) else (λp':((Bool → Bool) → (Bool → Bool)). ((λp'':(((Bool → Bool) → Bool) → (((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool))). (λc:((Bool → Bool) → (Bool → Bool)). (λh:Bool. h))) (if false then (λq':((Bool → Bool) → Bool). (λx:((Bool → Bool) → (Bool → Bool)). q')) else (λg:((Bool → Bool) → Bool). (if (if false then false else true) then (if true then (λl:((Bool → Bool) → (Bool → Bool)). g) else (λl:((Bool → Bool) → (Bool → Bool)). g)) else (λf:((Bool → Bool) → (Bool → Bool)). g))))))))) else (λq':(((Bool → Bool) → Bool) → (Bool → Bool)). (λt:((Bool → Bool) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λx:(Bool → Bool). ((if ((λq'':((Bool → Bool) → ((Bool → Bool) → ((Bool → Bool) → Bool))). true) (λn:(Bool → Bool). (if true then (λi:(Bool → Bool). (λc:(Bool → Bool). (if false then (if true then true else true) else false))) else (if false then (if true then (λo:(Bool → Bool). (λr:(Bool → Bool). (if (if false then false else true) then true else true))) else (if (((if true then ((λr:((Bool → Bool) → ((Bool → Bool) → (Bool → Bool))). (λt':(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λs':(Bool → ((Bool → Bool) → Bool)). false))) (λk:(Bool → Bool). (λx':(Bool → Bool). k))) else (if true then (λb:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λy:(Bool → ((Bool → Bool) → Bool)). false)) else (λi:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λi':(Bool → ((Bool → Bool) → Bool)). true)))) (λe':((Bool → Bool) → Bool). e')) (λs':Bool. (λe':(Bool → Bool). s'))) then (if true then (λj:(Bool → Bool). (λy:(Bool → Bool). false)) else (λk:(Bool → Bool). ((λw:(((Bool → (Bool → Bool)) → (Bool → (Bool → Bool))) → ((Bool → Bool) → Bool)). (λf:(Bool → Bool). (((λg:((Bool → (Bool → Bool)) → (Bool → Bool)). (λh:((Bool → Bool) → ((Bool → Bool) → (Bool → Bool))). false)) (λl:(Bool → (Bool → Bool)). n)) (λn':(Bool → Bool). (if true then (if true then (λy:(Bool → Bool). k) else (λo:(Bool → Bool). f)) else (if (if true then true else true) then (λb:(Bool → Bool). ((λd:(Bool → ((Bool → Bool) → (Bool → Bool))). f) (λw':Bool. (λf':(Bool → Bool). f')))) else (λw':(Bool → Bool). x))))))) (λl:((Bool → (Bool → Bool)) → (Bool → (Bool → Bool))). (λo:(Bool → Bool). false))))) else (λm':(Bool → Bool). (λa:(Bool → Bool). true)))) else (λl:(Bool → Bool). (λg:(Bool → Bool). (if true then (if false then false else true) else false))))))) then (λl:((((Bool → Bool) → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). false) else (if true then (if true then (λs':((((Bool → Bool) → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). true) else (if (if true then true else false) then (λy:((((Bool → Bool) → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). false) else (λw:((((Bool → Bool) → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). false))) else (λg:((((Bool → Bool) → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). true))) (λc:(((Bool → Bool) → Bool) → (Bool → Bool)). ((λu:(((Bool → Bool) → (Bool → (Bool → Bool))) → (Bool → (Bool → Bool))). (λm':(Bool → Bool). (λs':Bool. m'))) (λt':((Bool → Bool) → (Bool → (Bool → Bool))). (λk:Bool. x))))))))) (λn:((Bool → Bool) → Bool). (λk:Bool. true)))) (λb:((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))). (λy:(Bool → Bool). (λw:Bool. y)))) (λa:(Bool → Bool). (λh:(Bool → (Bool → Bool)). a)))) else (λx:(((Bool → Bool) → Bool) → Bool). (λy:(Bool → Bool). false)))) else (λl:Bool. (λs':Bool. ((λy:(((Bool → (Bool → Bool)) → (Bool → Bool)) → (Bool → (Bool → Bool))). ((λv:(((Bool → Bool) → (Bool → Bool)) → (Bool → ((Bool → Bool) → (Bool → (Bool → Bool))))). (if l then (λy':Bool. l) else (λm':Bool. true))) (λs'':((Bool → Bool) → (Bool → Bool)). (if s' then ((λs''':(Bool → ((Bool → Bool) → (Bool → Bool))). (λg:Bool. (if s' then (λf:(Bool → Bool). (λv:Bool. ((λz':(((Bool → Bool) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). f) (λc:((Bool → Bool) → Bool). (λq':((Bool → Bool) → (Bool → Bool)). f))))) else (λq':(Bool → Bool). (λk:Bool. q'))))) (λn:Bool. s'')) else ((if s' then (λk:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (λm':Bool. (λx:(Bool → Bool). (λq':Bool. x)))) else (((λw:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))). (λs''':((Bool → Bool) → (Bool → Bool)). (if true then (λf:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (λu:Bool. (λn:(Bool → Bool). (if s' then (λa:Bool. n) else (λh:Bool. n))))) else (λi:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (λb:Bool. (if false then (λz':(Bool → Bool). (if s' then (λq':Bool. z') else (λt:Bool. z'))) else ((λd:(((Bool → Bool) → Bool) → ((Bool → Bool) → ((Bool → Bool) → (Bool → Bool)))). (λk:(Bool → Bool). (λm':Bool. k))) (λi':((Bool → Bool) → Bool). (if false then (λk:(Bool → Bool). s'') else (if l then ((λh:(((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool)). (if l then (λe:(Bool → Bool). s''') else (if s' then (λg:(Bool → Bool). s'') else (if l then (λm':(Bool → Bool). s'') else (λk:(Bool → Bool). s''))))) (λs'''':((Bool → Bool) → (Bool → Bool)). i')) else (λc:(Bool → Bool). (λl':(Bool → Bool). c)))))))))))) (λp:(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). s'')) s'')) (λq':(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). (λs''':(Bool → (Bool → Bool)). (if l then s'' else (λd:(Bool → Bool). d))))))))) (λw:((Bool → (Bool → Bool)) → (Bool → Bool)). (λz':Bool. (λy:Bool. false)))))))) else (λz:(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → Bool))). (λl:Bool. (if l then (if l then (λb:Bool. (λx:Bool. b)) else (λa:Bool. (λt:Bool. l))) else (λi:Bool. (λo:Bool. false))))))))) (λa:(Bool → (Bool → Bool)). (if (if true then false else true) then (λk:(Bool → Bool). (λb:(Bool → Bool). false)) else (λj:(Bool → Bool). (if (if false then true else true) then (if true then (λo:(Bool → Bool). true) else (if true then (λi:(Bool → Bool). (if false then (if true then true else true) else false)) else ((λs:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → (Bool → Bool)). (((if false then (λu:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (if (if false then (if true then ((if true then (λj':(Bool → (Bool → Bool)). (if true then false else true)) else (if true then (((λq':(((Bool → (Bool → Bool)) → (Bool → Bool)) → (Bool → (Bool → Bool))). (if false then (λi:((Bool → Bool) → ((Bool → ((Bool → Bool) → Bool)) → ((Bool → Bool) → Bool))). (λx:(Bool → (Bool → Bool)). false)) else (if false then (if true then (λy:((Bool → Bool) → ((Bool → ((Bool → Bool) → Bool)) → ((Bool → Bool) → Bool))). (λn:(Bool → (Bool → Bool)). true)) else (λp:((Bool → Bool) → ((Bool → ((Bool → Bool) → Bool)) → ((Bool → Bool) → Bool))). (λn:(Bool → (Bool → Bool)). false))) else (λn:((Bool → Bool) → ((Bool → ((Bool → Bool) → Bool)) → ((Bool → Bool) → Bool))). (λt:(Bool → (Bool → Bool)). true))))) (λy:((Bool → (Bool → Bool)) → (Bool → Bool)). a)) (λn:(Bool → Bool). (λm':(Bool → ((Bool → Bool) → Bool)). (λv:(Bool → Bool). ((λg:((Bool → ((Bool → Bool) → Bool)) → (Bool → (Bool → Bool))). true) (λm'':(Bool → ((Bool → Bool) → Bool)). a)))))) else (λd:(Bool → (Bool → Bool)). false))) a) else true) else true) then (if (if false then false else false) then (if false then (λu':(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λw:(Bool → Bool). true)) else (λi:(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λd:(Bool → Bool). false))) else (λd:(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λa':(Bool → Bool). false))) else (λq':(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (if true then (if false then ((λv:((((Bool → Bool) → Bool) → (Bool → (Bool → Bool))) → (((Bool → Bool) → Bool) → ((Bool → Bool) → Bool))). (if false then (λn:(Bool → Bool). (q (if false then (λp:(Bool → Bool). j) else (λf:(Bool → Bool). (λq'':Bool. q''))))) else (λz:(Bool → Bool). false))) (if ((λl:(((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))). true) (λj':((Bool → Bool) → (Bool → Bool)). j')) then (λk:(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). (λj':((Bool → Bool) → Bool). j')) else ((λw:(((Bool → Bool) → (Bool → Bool)) → (Bool → (Bool → (Bool → Bool)))). (λk:(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). (λq'':((Bool → Bool) → Bool). (if true then q'' else q'')))) (λs':((Bool → Bool) → (Bool → Bool)). (λs'':Bool. a))))) else ((λz:(Bool → (((Bool → Bool) → Bool) → (Bool → Bool))). (λm':(Bool → Bool). true)) (λk:Bool. (if k then (λp:((Bool → Bool) → Bool). j) else (λh:((Bool → Bool) → Bool). j))))) else (λr:(Bool → Bool). false))))) else (if true then (λc:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (λf:(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). ((λu:((((Bool → Bool) → Bool) → (Bool → (Bool → Bool))) → ((Bool → Bool) → Bool)). (λr:(Bool → Bool). (if false then false else false))) (λl:(((Bool → Bool) → Bool) → (Bool → (Bool → Bool))). ((λy:((((Bool → Bool) → (Bool → Bool)) → Bool) → (Bool → (Bool → Bool))). (λr:(Bool → Bool). (if true then false else true))) (if true then (if true then (λk:(((Bool → Bool) → (Bool → Bool)) → Bool). a) else (λd:(((Bool → Bool) → (Bool → Bool)) → Bool). a)) else (λo:(((Bool → Bool) → (Bool → Bool)) → Bool). a))))))) else (λu:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool)))). (λo:(((Bool → (Bool → Bool)) → (Bool → Bool)) → ((Bool → (Bool → Bool)) → (Bool → Bool))). (λe:(Bool → Bool). true))))) (if (if false then false else false) then (λw:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λs':((Bool → Bool) → (Bool → Bool)). s')) else (λg:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). (λv:((Bool → Bool) → (Bool → Bool)). v)))) (if (if false then false else ((λr:((Bool → (Bool → Bool)) → (Bool → Bool)). (if true then ((λf:(Bool → ((Bool → Bool) → Bool)). false) ((if true then (λk:((Bool → Bool) → ((Bool → Bool) → (Bool → (Bool → Bool)))). ((λn:((((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool)) → (Bool → Bool)). (λv:Bool. (λo:(Bool → Bool). v))) (λq':(((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool)). j))) else (λz:((Bool → Bool) → ((Bool → Bool) → (Bool → (Bool → Bool)))). (λv:Bool. (λe:(Bool → Bool). v)))) (λd:(Bool → Bool). (λh:(Bool → Bool). a)))) else true)) (λx:(Bool → (Bool → Bool)). j))) then (λs':((Bool → (Bool → Bool)) → (Bool → Bool)). (λl:(Bool → (Bool → Bool)). j)) else ((λk:((Bool → (Bool → Bool)) → (Bool → Bool)). (λz:((Bool → (Bool → Bool)) → (Bool → Bool)). z)) (λb:(Bool → (Bool → Bool)). (λk:Bool. true)))))) ((λp:((((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool)) → (Bool → (Bool → Bool))). (if true then (if (if ((λw:(((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → (Bool → (Bool → Bool)))). false) (if true then (λh:((Bool → Bool) → (Bool → Bool)). (λo:(Bool → Bool). a)) else (λm':((Bool → Bool) → (Bool → Bool)). (λx:(Bool → Bool). a)))) then (if true then false else true) else true) then ((λz:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → ((Bool → Bool) → (Bool → Bool))). (λr:(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). j)) (λo:(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). ((if true then (λx:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (Bool → Bool)). (if true then (λk:(Bool → Bool). j) else (λf:(Bool → Bool). f))) else (if true then (if (((λw:(Bool → ((Bool → Bool) → (Bool → Bool))). (λw':((Bool → (Bool → Bool)) → ((Bool → Bool) → Bool)). (if false then ((λp':(((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool))). true) (λb:((((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)) → Bool). (λr:((Bool → Bool) → (Bool → Bool)). (λo':(Bool → Bool). true)))) else true))) (λb:Bool. (λa':(Bool → Bool). a'))) (λe:(Bool → (Bool → Bool)). (λr:(Bool → Bool). true))) then (λz:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (Bool → Bool)). (λc:(Bool → Bool). c)) else (λb:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (Bool → Bool)). (if false then (λf:(Bool → Bool). j) else (λl:(Bool → Bool). j)))) else (λx:((((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)) → (Bool → Bool)). (λt:(Bool → Bool). (λy:Bool. y))))) (λr:(((Bool → Bool) → Bool) → ((Bool → Bool) → Bool)). j)))) else ((λp':((((Bool → Bool) → Bool) → ((Bool → Bool) → (Bool → Bool))) → (Bool → (Bool → Bool))). (λa':(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). j)) (λp':(((Bool → Bool) → Bool) → ((Bool → Bool) → (Bool → Bool))). a))) else (λm':(((Bool → Bool) → (Bool → Bool)) → (Bool → Bool)). j))) (λf:(((Bool → Bool) → (Bool → Bool)) → ((Bool → Bool) → Bool)). a))))) else (if true then (λl:(Bool → Bool). true) else (λd:(Bool → Bool). false)))))))) ((if (if (if false then true else true) then false else true) then (if true then (λd:((((Bool → Bool) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (if false then (λu:((Bool → Bool) → (Bool → Bool)). (λi:Bool. (λt:Bool. t))) else (λb:((Bool → Bool) → (Bool → Bool)). (λf:Bool. (if f then (λc:Bool. c) else (λg:Bool. f)))))) else (λb:((((Bool → Bool) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (λl:((Bool → Bool) → (Bool → Bool)). (λb':Bool. (λo:Bool. o))))) else (if true then (if (if false then false else false) then (λb:((((Bool → Bool) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (λu:((Bool → Bool) → (Bool → Bool)). (λf:Bool. (λz:Bool. z)))) else (λt:((((Bool → Bool) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (λl:((Bool → Bool) → (Bool → Bool)). (λb:Bool. (λx:Bool. b))))) else (λk:((((Bool → Bool) → (Bool → Bool)) → Bool) → (((Bool → Bool) → (Bool → Bool)) → (Bool → Bool))). (λu:((Bool → Bool) → (Bool → Bool)). ((λc:((Bool → Bool) → (Bool → (Bool → Bool))). (λd:Bool. (λj:Bool. d))) (λo:(Bool → Bool). (λy:Bool. o))))))) (λk:(((Bool → Bool) → (Bool → Bool)) → Bool). (if true then (if true then (λr:((Bool → Bool) → (Bool → Bool)). (λw:Bool. w)) else (λz:((Bool → Bool) → (Bool → Bool)). (λb:Bool. b))) else (λv:((Bool → Bool) → (Bool → Bool)). (λy:Bool. y)))))) else (λb:Bool. b))) else (λh:(((Bool → Bool) → (Bool → Bool)) → Bool). (λr:Bool. r))) (λg:((Bool → Bool) → (Bool → Bool)). true))